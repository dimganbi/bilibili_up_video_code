#coding:utf8
"""
Django settings for django_1703_day3 project.

Generated by 'django-admin startproject' using Django 1.8.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '^1e-3(#n_y*pxq$i6(lc)o#g$e5mele$m(snd__=mqbx6!9tr)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'day2homework',
    'app01',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'django_1703_day3.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_1703_day3.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR,'static'),
)


# django日志配置
LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
#     If the disable_existing_loggers key in the LOGGING dictConfig is set to True (which is the default) then
# all loggers from the default configuration will be disabled. Disabled loggers are not the same as removed; the logger
# will still exist, but will silently discard anything logged to it, not even propagating entries to a parent logger. Thus
# you should be very careful using ’disable_existing_loggers’: True; it’s probably not what you want.
# Instead, you can set disable_existing_loggers to False and redefine some or all of the default loggers; or
# you can set LOGGING_CONFIG to None and handle logging config yourself.
    'formatters': { #  日志格式
        'standard': {
            'format': '%(asctime)s [%(name)s:%(lineno)d] [%(module)s:%(funcName)s] [%(levelname)s]- %(message)s'},
    },
    # 日志处理器
    'handlers': {
        # 基于文件的处理器
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'log/debug.log',
            'formatter': 'standard'
        },
        #基于控制台日志
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'standard'
        },
    },
    # 日志器
    'loggers': {
        # 日志器名称：日志器字典
        'app01': {
            'handlers': ['file','console'], # 可以设置多个handlers
            'level': 'CRITICAL',
            'propagate': False,
        },
        'stu.views': {
            'handlers': ['console'],
            'level': 'ERROR',
            # propagate 如果设置为 True 默认会向上一个级别找相应logger来继续处理，例如这里会找一个stu的logger来处理
            # （一般我们设置为False不向上找）
            'propagate': False,
        },
    },
}
